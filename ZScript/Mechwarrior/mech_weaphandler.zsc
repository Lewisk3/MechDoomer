
// Cockpit/crosshair handler(s)
class WeaponsHandler : Weapon
{
	int bobdir;
	
	Default
	{
		Weapon.SlotNumber 6;
		Weapon.SelectionOrder 3700;
		+WEAPON.AMMO_OPTIONAL;
		Tag " ";
	}

	override void PostBeginPlay()
	{
		bobdir = 1;
		super.PostBeginPlay();
	}
	
	action MechWarrior getPilot()
	{
		let plr = MechWarrior(Self);
		return plr;
	}
	
	action PSprite getPSprite()
	{
		let plr = getPilot();
		if(!plr) return NULL;
		return plr.player.GetPSprite(PSP_WEAPON);
	}
	
	States
	{			
		Ready:
			TNT1 A 0;
			MODL A 1 Fast 
			{
				let plr = getPilot();
				if(plr) 
				{	
					// Footsteps when bob is at adequite length.
					if(!plr.mech_models && plr.bobdir != invoker.bobdir && plr.vel.length() >= 0.08 )
					{
						if(plr.bobdir == 1) A_FireProjectile("MechFootstepEmitter");
						invoker.bobdir = plr.bobdir;
					}
					
					if(!plr.mech_shutdown)
					{ 
						let weap = plr.getSelectedWeapon();
						if(weap) 
						{
							int crosshair;
							if(weap.isHomming) 
								crosshair = plr.targetlocked ? 12 : plr.locktimer > 25 ? 11 : 10;
							else
								crosshair = (weap.cooldown_timer || plr.player.cmd.buttons & BT_ATTACK) ? 9 : 8;
							
							A_SetCrossHair(crosshair);
							plr.SetCrosshair(crosshair);
						}
					}

					if(CVar.FindCVar("mwd_nohud").getBool() || plr.mech_shutdown) 
					{
						A_SetCrossHair(0);
						plr.SetCrosshair(0);
					}
				}
				A_WeaponReady(WRF_NOBOB);
			}
		loop;
		Select:
			TNT1 A 0;
			MODL A 1 Offset(-1,35);
		DoSelect:
			TNT1 A 0 A_Raise();
		loop;
		Deselect:
			TNT1 A 0;
			MODL A 1 Offset(1,300);
		DoLower:
			TNT1 A 0 A_Lower();
		loop;
		Fire:
			MODL A 1;
		goto Ready;	
	}
}