	/*****************************\
	|	 Miscellaneous Systems    |
	\*****************************/

// Mechbay Stuff
class Door_3D : Actor
{
	int up;

	Default
	{
		+NOBLOCKMAP;
	}
	
	override void tick()
	{
		vel.z = 1.2;
		up++;
		if(up > 155) 
		{
			Die(self,self);
		}
		super.tick();
	}

	States
	{
		Spawn:
			DOOR A 1;
		loop;
	}
}
class Mechbay_3D : Actor
{
	States
	{
		Spawn:
			MBAY A 1;
		loop;
	}
}	

extend class MechwarriorBase;

void startMechbay()
{
	let bay = Spawn("mechbay",pos);
	float xo = (cos(angle+12))*32;
	float yo = (sin(angle+12))*32;
	let door = Spawn("Door_3D",(pos.x+xo,pos.y+yo,pos.z+60));
	if(bay)bay.angle = angle;
	if(door)door.angle = angle+128;
	mech_shutdown = true;
	//mechsounds.pushSound("Mech/Betty/SystemsCheck");
	//A_PlaySound("Mech/Power",4);
	//mechsounds.pushSound("Mech/StartupDone");
	manualshutdown = true;
	prevticks = ticks;
	lockangle = angle;
	lockpitch = pitch;
}

bool adjustTonnage(float amt, bool force=false)
{
	if(MDMath.RoundFloat(inv_context.weapons_tonnage+amt) > mech_tonnage && !force && !overtonnage) return false;
	inv_context.weapons_tonnage += amt;
	return true;
}

void adjustMoney(int amt) 
{ 
	if(!CheckVoodoo()) inv_context.money_cbills += amt; 
}
