// All mech parts \\

// Cockpits
class Cockpit_Invisible   : MechCockpitModel {}
class Cockpit_BattleArmor : MechCockpitModel {}
class Cockpit_Timberwolf  : MechCockpitModel {}
class Cockpit_Stormcrow   : MechCockpitModel {}
class Cockpit_Atlas       : MechCockpitModel {}
class Cockpit_Commando    : MechCockpitModel {}
class Cockpit_Jenner      : MechCockpitModel {}
class Cockpit_Urbanmech   : MechCockpitModel {}
class Cockpit_Nova    	  : MechCockpitModel {}
class Cockpit_Tarantula   : MechCockpitModel {}

// Hips
class Hips_Invisible   : MechHipsBase {}
class Hips_Jenner 	   : MechHipsBase {}
class Hips_Urbanmech   : MechHipsBase {}
class Hips_Timberwolf  : MechHipsBase {}
class Hips_Stormcrow   : MechHipsBase {}
class Hips_Atlas       : MechHipsBase {}
class Hips_Commando    : MechHipsBase {}
class Hips_Nova    	   : MechHipsBase {}
class Hips_Tarantula   : MechHipsBase {}
// Legs	
class Legs_Invisible   : MechLegsBase {}
class Legs_Timberwolf  : MechLegsBase {}
class Legs_Stormcrow   : MechLegsBase {}
class Legs_Atlas       : MechLegsBase {}
class Legs_Commando    : MechLegsBase {}
class Legs_Jenner      : MechLegsBase {}
class Legs_Urbanmech   : MechLegsBase {}
class Legs_Nova    	   : MechLegsBase {}
// Torsos
class Model_BattleArmor : MechTorsoBase
{
	Default {
		MechTorsoBase.Pieces "Hips_Invisible", "Legs_BattleArmor", "Cockpit_BattleArmor";
		MechPartsBase.ZOffset 0;
		MechPartsBase.CockpitOffset 0, 30;
	}
}
class Torso_Timberwolf : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Timberwolf", "Legs_Timberwolf", "Cockpit_Timberwolf";
		MechPartsBase.ZOffset 50;
		MechPartsBase.CockpitOffset 20, 70;
	}
}
class Torso_Stormcrow : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Stormcrow", "Legs_Stormcrow", "Cockpit_Stormcrow";
		MechPartsBase.ZOffset 60;
		MechPartsBase.CockpitOffset 25, 70;
	}
}
class Torso_Atlas : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Atlas", "Legs_Atlas", "Cockpit_Atlas";
		MechPartsBase.ZOffset 60;
		MechPartsBase.CockpitOffset 0, 100;
	}
}
class Torso_Commando : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Commando", "Legs_Commando", "Cockpit_Commando";
		MechPartsBase.ZOffset 40;
		MechPartsBase.CockpitOffset 0, 70;
	}
}
class Torso_Urbanmech : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Urbanmech", "Legs_Urbanmech", "Cockpit_Urbanmech";
		MechPartsBase.ZOffset 35;
	}
}
class Torso_Jenner : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Jenner", "Legs_Jenner", "Cockpit_Jenner";
		MechPartsBase.ZOffset 42;
		MechPartsBase.CockpitOffset 25, 47;
	}
}
class Torso_Nova : MechTorsoBase {
	Default {
		MechTorsoBase.DoNotTwist true;
		MechTorsoBase.Pieces "Hips_Nova", "Legs_Nova", "Cockpit_Nova";
		MechPartsBase.ZOffset 60;
		MechPartsBase.CockpitOffset 18, 57;
	}
}
class Torso_Tarantula : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Tarantula", "Legs_Tarantula", "Cockpit_Tarantula";
		MechPartsBase.ZOffset 60;
		MechPartsBase.CockpitOffset 0, 90;
	}
}
class Torso_Invisible : MechTorsoBase {
	Default {
		MechTorsoBase.Pieces "Hips_Invisible", "Legs_Invisible", "Cockpit_Invisible";
	}
}


// Specialized Parts
class Legs_BattleArmor : MechLegsBase 
{
	override void tick()
	{
		super.Tick();
		if(mechowner)
		{
			angle = mechowner.angle;
			if((!mechowner.dronecam && mechowner.nofirstpersonlegs) && !mechowner.CheckVoodoo()) 
				Sprite = GetSpriteIndex("TNT1A0");
			else
				Sprite = GetSpriteIndex("TLEGA0");
				
			if(!mechowner.CheckVoodoo()) spdrating = (mechowner.overfactor * mechowner.MoveSpeedKPH)/160.;
		}
	}
	
	bool isMoving()
	{
		if(!mechowner) return false;
		return mechowner.vel.xy.length() >= 4;
	}
	
	States
	{
		Spawn:
			TLEG A 1;
		SpawnIdle:
			"####" "#" 1 
			{
				if(mechowner && mechowner.player)
				{
					if(isMoving()) return ResolveState("WalkCycle");
					if(mechowner.weapons_fired) return ResolveState("Shoot");
					if(!mechowner.player.onground) return ResolveState("Flying");
					if(mechowner.isdead) return ResolveState("Die");
				}
				return ResolveState(Null);
			}
		loop;
		WalkCycle:
			TLEG BCDEFGHI 3 
			{	
				if(mechowner.player.cmd.buttons & BT_ATTACK) return ResolveState("Shoot");
				if(!mechowner.player.onground) return ResolveState("Flying");
				if(mechowner.isdead) return ResolveState("Die");
				if(spdrating > 0) tics = clamp(10-(abs(spdrating)*10.), 2, 8);
				return !isMoving() ? ResolveState("SpawnIdle") : ResolveState(Null); 
			}
		loop;
		Shoot:
			TLEG K 4;
		goto SpawnIdle;
		Flying:
			TLEG L 2;
		goto SpawnIdle;
		Die:
			TLEG MNOPQ 8;
		DeathDone:
			TLEG R 1;
		loop;
	}
}

class Legs_Tarantula  : MechLegsBase 
{
	override bool checkStepping(bool idle, int frameoffs)
	{
		if(!mechowner) return false;
		mechowner.stepping = idle ? false : (frame == 0+frameoffs || frame == 2+frameoffs || frame == 6+frameoffs || frame == 8+frameoffs);
		return true;
	}
}